#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Prepare text: convert to uppercase, remove non-alphabetic characters
void prepareText(char *text) {
    int i, j = 0;
    for (i = 0; text[i] != '\0'; i++) {
        if (isalpha(text[i])) {
            text[j++] = toupper(text[i]);
        }
    }
    text[j] = '\0';
}

// Function to split text into bigrams and reverse each bigram for encryption
void ngramEncrypt(char *plaintext, char *ciphertext) {
    int len = strlen(plaintext);
    int index = 0;
    for (int i = 0; i < len; i += 2) {
        if (i + 1 < len) {
            // Reverse the bigram (two characters at a time)
            ciphertext[index++] = plaintext[i + 1];
            ciphertext[index++] = plaintext[i];
        } else {
            // If odd length, just copy the last character
            ciphertext[index++] = plaintext[i];
        }
    }
    ciphertext[index] = '\0';
}

// Function to split text into bigrams and reverse each bigram for decryption
void ngramDecrypt(char *ciphertext, char *plaintext) {
    int len = strlen(ciphertext);
    int index = 0;
    for (int i = 0; i < len; i += 2) {
        if (i + 1 < len) {
            // Reverse the bigram back to original (two characters at a time)
            plaintext[index++] = ciphertext[i + 1];
            plaintext[index++] = ciphertext[i];
        } else {
            // If odd length, just copy the last character
            plaintext[index++] = ciphertext[i];
        }
    }
    plaintext[index] = '\0';
}

int main() {
    char text[1000];
    char result[1000];
    int choice;

    printf("Ngram Cipher (Bigram Cipher)\n");
    printf("1. Encrypt\n");
    printf("2. Decrypt\n");
    printf("Enter your choice (1 or 2): ");
    scanf("%d", &choice);
    getchar(); // consume newline

    printf("Enter text: ");
    fgets(text, sizeof(text), stdin);
    text[strcspn(text, "\n")] = '\0';

    prepareText(text);

    if (choice == 1) {
        ngramEncrypt(text, result);
        printf("Encrypted Text: %s\n", result);
    } else if (choice == 2) {
        ngramDecrypt(text, result);
        printf("Decrypted Text: %s\n", result);
    } else {
        printf("Invalid choice.\n");
        return 1;
    }

    return 0;
}
