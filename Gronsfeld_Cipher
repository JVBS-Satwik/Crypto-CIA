#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <stdlib.h>

// Prepare text: remove non-letters, convert to uppercase
void prepareText(char *text) {
    int i, j = 0;
    for (i = 0; text[i] != '\0'; i++) {
        if (isalpha(text[i])) {
            text[j++] = toupper(text[i]);
        }
    }
    text[j] = '\0';
}

// Encrypt using Gronsfeld Cipher
void gronsfeldEncrypt(char *plaintext, char *key, char *ciphertext) {
    int len = strlen(plaintext);
    int keyLen = strlen(key);

    for (int i = 0; i < len; i++) {
        int shift = key[i % keyLen] - '0';  // Convert char digit to int
        if (shift < 0 || shift > 9) shift = 0; // Failsafe

        char ch = plaintext[i];
        ciphertext[i] = ((ch - 'A' + shift) % 26) + 'A';
    }
    ciphertext[len] = '\0';
}

// Decrypt using Gronsfeld Cipher
void gronsfeldDecrypt(char *ciphertext, char *key, char *plaintext) {
    int len = strlen(ciphertext);
    int keyLen = strlen(key);

    for (int i = 0; i < len; i++) {
        int shift = key[i % keyLen] - '0';
        if (shift < 0 || shift > 9) shift = 0;

        char ch = ciphertext[i];
        plaintext[i] = ((ch - 'A' - shift + 26) % 26) + 'A';
    }
    plaintext[len] = '\0';
}

int main() {
    char text[1000];
    char key[100];
    char result[1000];
    int choice;

    printf("Gronsfeld Cipher\n");
    printf("1. Encrypt\n");
    printf("2. Decrypt\n");
    printf("Enter your choice (1 or 2): ");
    scanf("%d", &choice);
    getchar(); // Consume newline

    printf("Enter text: ");
    fgets(text, sizeof(text), stdin);
    text[strcspn(text, "\n")] = '\0';

    printf("Enter numeric key (e.g., 31415): ");
    fgets(key, sizeof(key), stdin);
    key[strcspn(key, "\n")] = '\0';

    prepareText(text);

    if (choice == 1) {
        gronsfeldEncrypt(text, key, result);
        printf("Encrypted Text: %s\n", result);
    } else if (choice == 2) {
        gronsfeldDecrypt(text, key, result);
        printf("Decrypted Text: %s\n", result);
    } else {
        printf("Invalid choice.\n");
        return 1;
    }

    return 0;
}
