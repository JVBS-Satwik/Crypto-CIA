#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Prepare text: convert to uppercase, remove non-letters
void prepareText(char *text) {
    int i, j = 0;
    for (i = 0; text[i] != '\0'; i++) {
        if (isalpha(text[i])) {
            text[j++] = toupper(text[i]);
        }
    }
    text[j] = '\0';
}

// Encrypt with Caesar shift +2 (August Cipher)
void augustEncrypt(char *plaintext, char *ciphertext) {
    int i;
    for (i = 0; plaintext[i] != '\0'; i++) {
        ciphertext[i] = ((plaintext[i] - 'A' + 2) % 26) + 'A';
    }
    ciphertext[i] = '\0';
}

// Decrypt with Caesar shift -2 (August Cipher)
void augustDecrypt(char *ciphertext, char *plaintext) {
    int i;
    for (i = 0; ciphertext[i] != '\0'; i++) {
        plaintext[i] = ((ciphertext[i] - 'A' - 2 + 26) % 26) + 'A';
    }
    plaintext[i] = '\0';
}

int main() {
    char text[1000];
    char result[1000];
    int choice;

    printf("August Cipher (Caesar Cipher with shift 2)\n");
    printf("1. Encrypt\n");
    printf("2. Decrypt\n");
    printf("Enter your choice (1 or 2): ");
    scanf("%d", &choice);
    getchar(); // consume newline

    printf("Enter text: ");
    fgets(text, sizeof(text), stdin);
    text[strcspn(text, "\n")] = '\0';

    prepareText(text);

    if (choice == 1) {
        augustEncrypt(text, result);
        printf("Encrypted Text: %s\n", result);
    } else if (choice == 2) {
        augustDecrypt(text, result);
        printf("Decrypted Text: %s\n", result);
    } else {
        printf("Invalid choice.\n");
        return 1;
    }

    return 0;
}
